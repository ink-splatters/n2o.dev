<!DOCTYPE html>
<html>
<head>
<meta charset="utf-8" />
<meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
<meta name="viewport" content="width=device-width, initial-scale=1.0" />
<meta name="description" content="" />
<meta name="author" content="Maxim Sokhatsky" />
<link href="https://fonts.googleapis.com/css?family=Montserrat:900" rel="stylesheet" />
<title>Vol.2</title>
<link rel="stylesheet" href="https://n2o.dev/blank.css?v=2"/>
<link rel="shortcut icon" type="image/x-icon" href="/img/favicon.ico" />
<link rel="apple-touch-icon" sizes="180x180" href="/img/apple-touch-icon.png" />
<link rel="icon" type="image/png" sizes="32x32" href="/img/favicon-32x32.png" />
<link rel="icon" type="image/png" sizes="16x16" href="/img/favicon-16x16.png" />
<link rel="manifest" href="/img/site.webmanifest" />
<style>
@media print {
    .pagebreak { page-break-after: always; }
}
</style>
</head>
<body>
<nav>
    <a href="../../ua/index.html">DEV</a>
    <a href="../index.html">BOOKS</a>
    <a href="index.html">VOL.2</a>
    <a href="#" style="background:#ededed;">DATA</a>
</nav>
<header>
  <a href="https://github.com/synrc/n2o.tech"><img src="https://openmoji.org/data/color/svg/1F4D7.svg" /></a>
  <h1>СХОВИЩЕ</h1>
</header>
<aside>
  <article>
    <section>
      <h3>КНИГА N2O</h3>
      <div>Глава СХОВИЩЕ розказує як працювати зі сховищами даних <b>RocksDB</b> та <b>Mnesia</b>.
      </div>
      <br>
      <div>2016—2021 © <a href="https://5ht.co/license.htm">ISC LICENSE</a></div>
      <div>8.11 7.1 6.6 5.10</div>
    </section>
    <section>
      <h3>ЗМІСТ</h3>
      <div><ul>
          <li><a href="index.html">ПЕРЕДМОВА</a></li>
          <li><a href="intro.htm">ВСТУП</a></li>
          <li><a href="samples.htm">ПРИКЛАДИ</a></li>
          <li><a href="protocols.htm">ПРОТОКОЛИ</a></li>
          <li><a href="interface.htm">ІНТЕРФЕЙС</a></li>
          <li><a href="data.htm">СХОВИЩЕ</a></li>
          <li><a href="logic.htm">ЛОГІКА</a></li>
          <li><a href="spec.htm">МОДЕЛЬ</a></li>
      </ul></div>
    </section>
  </article>
</aside>
<main>
<article>
  <section>

     <h3>ВСТУП</h3>

     <p>KVS - це шар абстракції, що складається з двох частин: базового
        АПІ та АПІ управління стримами, тейк, дроп, фолд, катаморфізм,
        як ви любите. Основне АПИ в модулі kvs, а стримова в kvs_stream.
        Користуючись нагодою, хочу пропіарити схожі рішення в галузі
        зберігання даних на ерланзі: dátum і серія бібліотек від Дмитра
        Колесникова, replayq від Фенга Лі, а також небагатьох інших,
        хто намагався абстрактно вирішити проблему.</p>

     <h4>Призначення KVS</h4>

<p>&mdash; Надання інтерфейсу абстрагування широкого спектру сховищ;<br>
&mdash; Надання зручного Ерланг REPL інтерфейсу для роботи з рекордами;<br>
&mdash; Поділ на базовий (get put) і стриманий інтерфейс ітераторів (next prev);<br>
&mdash; Набір драйверів (внутрішня база, зовнішня база і файлова система);<br>
&mdash; Шари даних: файлова система, ланцюжки повідомлень, банківські транзакції, дерева підписів, трейси бізнес-процесів, блокчейни, системи черг, тайм сирієс, ось це все.<br>
</p>

<p>Починаючи з легковагої модифікації KVS змінила назву, тепер це "Абстрактна База Ланцюжків", а не "Абстрактна База Термів", тому що виділилося окреме стриму АПІ.</P>

<p>Розкажемо трохи про теоретичні основи KVS. Ця бібліотека дозволяє або повинна дозволяти зберігати та витягувати будь-якого виду структури надаючи семантику управління курсорами next prev, якою володіють дерева. Тому можна сказати, що це інтерфейс оператора до ланцюжкових та деревоподібних сховищ. У своїй основі KVS підтримує три механізми зберігання ланцюжків:
1) перший спосіб, двозв'язні списки, явний, де next і prev покажчики безпосередньо присутні в даних, підходить навіть для управління деревами;
2) другий, явний, де є тільки next, цей спосіб підходить для списків, багато людей запитують про цей спосіб, але ми його не використовували ніколи та імплементації під рукою немає;
3) і третій, явний спосіб, де записи вбудовуються у існуючий індекс, тобто. btree таблиці, zero-overhead.</p>

<p>В якомусь сенсі перший і другий способи реалізують певний шар поверх KVS, так як kvs_stream працює з будь-якими сторожами поліморфно, а ось kvs_st драйвер стриму зроблено спеціально для rocksdb.</p>

     <h3>ROCKSDB</h3>

     <h3>MNESIA</h3>
  </section>
</article>
</main>
<footer>Namdak Tonpa <span class="heart">❤</span> N2O</footer>
<script>function drop(){document.getElementById("dropdown").classList.toggle("show");}</script>
</body>
</html>
